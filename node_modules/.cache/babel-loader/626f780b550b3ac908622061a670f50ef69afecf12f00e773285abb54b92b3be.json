{"ast":null,"code":"import _objectSpread from\"C:/Users/pc/Downloads/tawjihi-main/tawjihi-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useRef,useEffect}from'react';import'@fortawesome/fontawesome-free/css/all.min.css';import'../styles/Chatbot.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chatbot=()=>{const[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState('');const[searchType,setSearchType]=useState('ecole');const[isLoading,setIsLoading]=useState(false);const messagesEndRef=useRef(null);// Auto-scroll vers le bas quand de nouveaux messages arrivent\nuseEffect(()=>{scrollToBottom();},[messages]);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};const handleSendMessage=async e=>{e.preventDefault();if(inputMessage.trim()===''||isLoading)return;// Ajouter le message de l'utilisateur\nconst userMessage={text:inputMessage,sender:'user',timestamp:new Date().toLocaleTimeString(),searchType:searchType// Ajouter le type de recherche au message\n};const updatedMessages=[...messages,userMessage];setMessages(updatedMessages);setInputMessage('');setIsLoading(true);try{// Message temporaire du bot\nconst tempBotMessage={text:\"Je traite votre demande...\",sender:'bot',timestamp:new Date().toLocaleTimeString()};setMessages(prev=>[...prev,tempBotMessage]);// Préparer les données pour l'API\nconst conversation=updatedMessages.map(msg=>_objectSpread({sender:msg.sender,text:msg.text},msg.searchType&&{searchType:msg.searchType}));const response=await fetch('http://localhost:5000/api/chat',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message:inputMessage,conversation:conversation,searchType:searchType})});if(!response.ok){throw new Error(\"Erreur HTTP: \".concat(response.status));}const data=await response.json();if(data.error){throw new Error(data.error);}// Remplacer le message temporaire par la vraie réponse\nsetMessages(prev=>[...prev.slice(0,-1),{text:data.response,sender:'bot',timestamp:new Date().toLocaleTimeString()}]);}catch(error){console.error(\"Erreur:\",error);setMessages(prev=>[...prev.slice(0,-1),{text:\"Désolé, une erreur s'est produite. Veuillez réessayer.\",sender:'bot',timestamp:new Date().toLocaleTimeString()}]);}finally{setIsLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-container modern-chatbot\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"TawjihiBot Assistant\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Posez vos questions sur l'orientation scolaire\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-messages\",children:[messages.map((message,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"message-bubble \".concat(message.sender==='user'?'user-message':'bot-message'),children:[message.searchType&&message.sender==='user'&&/*#__PURE__*/_jsx(\"div\",{className:\"message-tag\",children:getSearchTypeLabel(message.searchType)}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-content\",children:[/*#__PURE__*/_jsx(\"p\",{children:message.text}),/*#__PURE__*/_jsx(\"span\",{className:\"message-timestamp\",children:message.timestamp})]})]},index)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef}),isLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"message-bubble bot-message\",children:/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"typing-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]})})})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSendMessage,className:\"chat-input-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputMessage,onChange:e=>setInputMessage(e.target.value),placeholder:\"Posez votre question...\",className:\"chat-input\",disabled:isLoading}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input-row\",children:[/*#__PURE__*/_jsxs(\"select\",{className:\"chat-select\",value:searchType,onChange:e=>setSearchType(e.target.value),disabled:isLoading,children:[/*#__PURE__*/_jsx(\"option\",{value:\"ecole\",children:\"Recherche par \\xE9cole\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ecole_filiere\",children:\"Recherche par \\xE9cole et fili\\xE8re\"}),/*#__PURE__*/_jsx(\"option\",{value:\"limite\",children:\"Recherche par limite\"}),/*#__PURE__*/_jsx(\"option\",{value:\"conseil\",children:\"Conseil d'orientation\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"send-button modern-btn \".concat(isLoading?'disabled':''),disabled:isLoading,children:isLoading?/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-circle-notch fa-spin\"}):/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-paper-plane\"})})]})]})]});};// Helper function to get label for search type\nconst getSearchTypeLabel=type=>{const labels={'ecole':'École','ecole_filiere':'École & Filière','limite':'Limite','conseil':'Conseil'};return labels[type]||type;};export default Chatbot;","map":{"version":3,"names":["React","useState","useRef","useEffect","jsx","_jsx","jsxs","_jsxs","Chatbot","messages","setMessages","inputMessage","setInputMessage","searchType","setSearchType","isLoading","setIsLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","userMessage","text","sender","timestamp","Date","toLocaleTimeString","updatedMessages","tempBotMessage","prev","conversation","map","msg","_objectSpread","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","concat","status","data","json","error","slice","console","className","children","index","getSearchTypeLabel","ref","onSubmit","type","value","onChange","target","placeholder","disabled","labels"],"sources":["C:/Users/pc/Downloads/tawjihi-main/tawjihi-main/src/pages/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport '../styles/Chatbot.css';\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [searchType, setSearchType] = useState('ecole');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll vers le bas quand de nouveaux messages arrivent\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    if (inputMessage.trim() === '' || isLoading) return;\n\n    // Ajouter le message de l'utilisateur\n    const userMessage = {\n      text: inputMessage,\n      sender: 'user',\n      timestamp: new Date().toLocaleTimeString(),\n      searchType: searchType // Ajouter le type de recherche au message\n    };\n\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setInputMessage('');\n    setIsLoading(true);\n\n    try {\n      // Message temporaire du bot\n      const tempBotMessage = {\n        text: \"Je traite votre demande...\",\n        sender: 'bot',\n        timestamp: new Date().toLocaleTimeString()\n      };\n      setMessages(prev => [...prev, tempBotMessage]);\n\n      // Préparer les données pour l'API\n      const conversation = updatedMessages.map(msg => ({\n        sender: msg.sender,\n        text: msg.text,\n        ...(msg.searchType && { searchType: msg.searchType })\n      }));\n\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: inputMessage,\n          conversation: conversation,\n          searchType: searchType\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Erreur HTTP: ${response.status}`);\n      }\n\n      const data = await response.json();\n      \n      if (data.error) {\n        throw new Error(data.error);\n      }\n\n      // Remplacer le message temporaire par la vraie réponse\n      setMessages(prev => [\n        ...prev.slice(0, -1),\n        {\n          text: data.response,\n          sender: 'bot',\n          timestamp: new Date().toLocaleTimeString()\n        }\n      ]);\n    } catch (error) {\n      console.error(\"Erreur:\", error);\n      setMessages(prev => [\n        ...prev.slice(0, -1),\n        {\n          text: \"Désolé, une erreur s'est produite. Veuillez réessayer.\",\n          sender: 'bot',\n          timestamp: new Date().toLocaleTimeString()\n        }\n      ]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"chatbot-container modern-chatbot\">\n      <div className=\"chat-header\">\n        <h2>TawjihiBot Assistant</h2>\n        <p>Posez vos questions sur l'orientation scolaire</p>\n      </div>\n\n      <div className=\"chat-messages\">\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            className={`message-bubble ${message.sender === 'user' ? 'user-message' : 'bot-message'}`}\n          >\n            {message.searchType && message.sender === 'user' && (\n              <div className=\"message-tag\">\n                {getSearchTypeLabel(message.searchType)}\n              </div>\n            )}\n            <div className=\"message-content\">\n              <p>{message.text}</p>\n              <span className=\"message-timestamp\">{message.timestamp}</span>\n            </div>\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n        {isLoading && (\n          <div className=\"message-bubble bot-message\">\n            <div className=\"message-content\">\n              <div className=\"typing-indicator\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <form onSubmit={handleSendMessage} className=\"chat-input-form\">\n        <input\n          type=\"text\"\n          value={inputMessage}\n          onChange={(e) => setInputMessage(e.target.value)}\n          placeholder=\"Posez votre question...\"\n          className=\"chat-input\"\n          disabled={isLoading}\n        />\n        <div className=\"chat-input-row\">\n        <select\n          className=\"chat-select\"\n          value={searchType}\n          onChange={e => setSearchType(e.target.value)}\n          disabled={isLoading}\n        >\n          <option value=\"ecole\">Recherche par école</option>\n          <option value=\"ecole_filiere\">Recherche par école et filière</option>\n          <option value=\"limite\">Recherche par limite</option>\n          <option value=\"conseil\">Conseil d'orientation</option>\n        </select>\n        <button \n          type=\"submit\" \n          className={`send-button modern-btn ${isLoading ? 'disabled' : ''}`}\n          disabled={isLoading}\n        >\n          {isLoading ? (\n            <i className=\"fas fa-circle-notch fa-spin\"></i>\n          ) : (\n            <i className=\"fas fa-paper-plane\"></i>\n          )}\n        </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n// Helper function to get label for search type\nconst getSearchTypeLabel = (type) => {\n  const labels = {\n    'ecole': 'École',\n    'ecole_filiere': 'École & Filière',\n    'limite': 'Limite',\n    'conseil': 'Conseil'\n  };\n  return labels[type] || type;\n};\n\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}